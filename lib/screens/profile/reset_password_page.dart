import 'package:dvij_flutter/elements/custom_button.dart';
import 'package:dvij_flutter/screens/profile/registration_screen.dart';
import 'package:flutter/material.dart';
import 'package:dvij_flutter/authentication/auth_with_email.dart';
import 'package:dvij_flutter/elements/custom_snack_bar.dart';
import '../../themes/app_colors.dart';

class ResetPasswordPage extends StatefulWidget {
  const ResetPasswordPage({super.key});


  @override
  _ResetPasswordPage createState() => _ResetPasswordPage();

}

// ---- –≠–∫—Ä–∞–Ω —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è ---

class _ResetPasswordPage extends State<ResetPasswordPage> {

  // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã -----
  final AuthWithEmail authWithEmail = AuthWithEmail();

  // --- –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞ ----
  final TextEditingController emailController = TextEditingController();

  // --- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è ------
  void navigateToEvents() {
    Navigator.pushNamedAndRemoveUntil(
      context,
      '/Events', // –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∑–∞–¥–∞–µ—Ç–µ –≤ MaterialApp
          (route) => false,
    );
  }

  // ---- –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è ----

  void showSnackBar(String message, Color color, int showTime) {
    final snackBar = customSnackBar(message: message, backgroundColor: color, showTime: showTime);
    ScaffoldMessenger.of(context).showSnackBar(snackBar);
  }

  // ----- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è -----

  bool showRegButton = false;

  void updateShowRegButton(bool newValue) {
    setState(() {
      showRegButton = newValue;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è'),
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.fromLTRB(20, 50, 20, 50),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [

            // TODO –°–¥–µ–ª–∞—Ç—å —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏, –ø–æ–∫–∞ –∏–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è

            // ---- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ ------

            Text('–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è', style: Theme.of(context).textTheme.titleLarge,),
            const SizedBox(height: 15.0),
            Text('–ó–∞–±—ã—Ç—ã–π –ø–∞—Ä–æ–ª—å ‚Äì –Ω–µ –ø–æ–≤–æ–¥ –¥–ª—è –ø–µ—á–∞–ª–∏! –£–∫–∞–∂–∏ —Å–≤–æ—é –ø–æ—á—Ç—É, –∏ –º—ã –æ—Ç–ø—Ä–∞–≤–∏–º —Ç–µ–±–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –ø–∞—Ä–æ–ª—è', style: Theme.of(context).textTheme.bodyMedium,),
            const SizedBox(height: 25.0),

            // ---- –ü–æ–ª–µ –≤–≤–æ–¥–∞ email -----

            TextField(
              style: Theme.of(context).textTheme.bodyMedium,
              controller: emailController,
              decoration: const InputDecoration(
                  labelText: 'Email',
                  prefixIcon: Icon(Icons.email),
              ),
            ),
            const SizedBox(height: 16.0),

            // ----- –ö–Ω–æ–ø–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è ----

            CustomButton(
                buttonText: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–∞—Ä–æ–ª—å',
                onTapMethod: () async {

                  String email = emailController.text;

                  // –°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è

                  String? textMessage = await authWithEmail.resetPassword(email);

                  // --- –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Å–±—Ä–æ—Å–∞ ----

                  if (textMessage != null) {

                    // TODO - –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–∏ –æ—à–∏–±–∫–∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é –≤—ã–≤–æ–¥–∞ –æ—à–∏–±–∫–∏

                    if (textMessage == 'invalid-email') {
                      updateShowRegButton(false);
                      showSnackBar('–û–π, —á—Ç–æ-—Ç–æ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º Email –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –£–¥–æ—Å—Ç–æ–≤–µ—Ä—å—Å—è, —á—Ç–æ –≤–≤–æ–¥–∏—à—å –µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏ –¥–∞–≤–∞–π –µ—â–µ —Ä–∞–∑! üì≠üîÑ', AppColors.attentionRed, 5);
                    } else if (textMessage == 'user-not-found') {
                      updateShowRegButton(true);
                      showSnackBar('–£–ø—Å! –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–π Email –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ú–æ–∂–µ—Ç, –æ–ø–µ—á–∞—Ç–∫–∞? –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–πc—è! üìßü§î', AppColors.attentionRed, 5);
                    } else if (textMessage == 'too-many-requests') {
                      updateShowRegButton(false);
                      showSnackBar('–û–π! –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫. –í —Ü–µ–ª—è—Ö –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –º—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –≤—Ö–æ–¥ —Å —Ç–≤–æ–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ! üîí‚è≥', AppColors.attentionRed, 5);
                    } else if (textMessage == 'missing-email') {
                      updateShowRegButton(false);
                      showSnackBar('–ë–µ–∑ —Ç–≤–æ–µ–π –ø–æ—á—Ç—ã –º—ã –≤ —Ç—É–ø–∏–∫–µ. –ü–æ–¥–µ–ª–∏—Å—å –µ—é, –∏ –º—ã –≤–º–∏–≥ –æ—Ç–ø—Ä–∞–≤–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –ø–∞—Ä–æ–ª—è.', AppColors.attentionRed, 5);
                    } else if (textMessage == 'success') {

                      showSnackBar('–ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é –ø–æ—á—Ç—É ‚Äì –º—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –ø–∞—Ä–æ–ª—è. –°–ª–µ–¥—É–π —à–∞–≥–∞–º –∏ –≤–µ—Ä–Ω–∏ –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É', Colors.green,5);
                      navigateToEvents();
                    } else {
                      showSnackBar('–û–π! –ß—Ç–æ-—Ç–æ —É –Ω–∞—Å –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∏ –º—ã –≤ –ø–µ—á–∞–ª–∏. –ü–æ–ø—Ä–æ–±—É–π –≤–æ–π—Ç–∏ –ø–æ–∑–∂–µ', AppColors.attentionRed, 5);
                    }

                  } else {

                    showSnackBar('–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∏ –º—ã —Å –Ω–∏–º –Ω–µ –∑–Ω–∞–∫–æ–º—ã. –ü–æ–ø—Ä–æ–±—É–π –≤–æ–π—Ç–∏ –ø–æ–∑–∂–µ, –∏, –≤–æ–∑–º–æ–∂–Ω–æ, –≤—Å–µ –Ω–µ–¥–æ—Ä–∞–∑—É–º–µ–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–∏—Ç—Å—è', AppColors.attentionRed, 5);

                  }
                }
            ),

            // ---- –ö–æ–Ω—Ç–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ -----

            if (showRegButton) const SizedBox(height: 50.0),

            if (showRegButton) Text(
                '–û–π-–æ–π! –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–∫–∏–º Email. –ú–æ–∂–µ—Ç –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç? üì©üîç',
                style: Theme.of(context).textTheme.bodyMedium
            ),

            if (showRegButton) const SizedBox(height: 20.0),

            if (showRegButton) CustomButton(
              state: 'secondary',
              buttonText: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
              onTapMethod: () {
                Navigator.push(
                  context,
                  MaterialPageRoute(builder: (context) => const RegistrationScreen()),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}