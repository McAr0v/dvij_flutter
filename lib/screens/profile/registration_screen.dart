import 'package:dvij_flutter/database_firebase/user_database.dart';
import 'package:dvij_flutter/elements/custom_button.dart';
import 'package:dvij_flutter/elements/loading_screen.dart';
import 'package:dvij_flutter/elements/text_with_link.dart';
import 'package:flutter/material.dart';
import 'package:dvij_flutter/authentication/auth_with_email.dart';
import '../../app_state/appstate.dart';
import '../../classes/user_class.dart';
import '../../elements/custom_snack_bar.dart';
import '../../themes/app_colors.dart';
import 'login_screen.dart';

class RegistrationScreen extends StatefulWidget {
  const RegistrationScreen({super.key});

  @override
  _RegistrationScreenState createState() => _RegistrationScreenState();
}

class _RegistrationScreenState extends State<RegistrationScreen> {
  late final AppState appState;
  final AuthWithEmail authWithEmail = AuthWithEmail();
  final TextEditingController emailController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();
  final UserDatabase userDatabase = UserDatabase();


  void navigateToProfile() {
    Navigator.pushNamedAndRemoveUntil(
      context,
      '/Profile', // –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∑–∞–¥–∞–µ—Ç–µ –≤ MaterialApp
          (route) => false,
    );
  }

  void showSnackBar(String message, Color color, int showTime) {
    final snackBar = customSnackBar(message: message, backgroundColor: color, showTime: showTime);
    ScaffoldMessenger.of(context).showSnackBar(snackBar);
  }

  bool showLogInButton = false;
  bool privacyPolicyChecked = false;
  bool loading = false;

  void updateShowLogInButton(bool newValue) {
    setState(() {
      showLogInButton = newValue;
    });
  }

  void togglePrivacyPolicyChecked() {
    setState(() {
      privacyPolicyChecked = !privacyPolicyChecked;
    });
  }

  bool _isObscured = true;

  void _togglePasswordVisibility() {
    setState(() {
      _isObscured = !_isObscured;
    });
  }

  @override
  Widget build(BuildContext context) {

    return Scaffold(
      appBar: AppBar(
        title: const Text('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'),
      ),
      body: Stack (

        children: [

          if (loading) const LoadingScreen(loadingText: '–ü–æ–¥–æ–∂–¥–∏, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',)

          else SingleChildScrollView(
            padding: const EdgeInsets.fromLTRB(20, 50, 20, 50),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              mainAxisAlignment: MainAxisAlignment.center,
              children: [

                Text('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', style: Theme.of(context).textTheme.titleLarge,),
                const SizedBox(height: 15.0),
                Text('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—à—å—Å—è –∫ –Ω–∞–º! –¢–µ–ø–µ—Ä—å —Ç—ã —á–∞—Å—Ç—å –Ω–∞—à–µ–π –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–π —Å–µ–º—å–∏. –ì–æ—Ç–æ–≤—å—Å—è –∫ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–º –≤—Å—Ç—Ä–µ—á–∞–º –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º! üòä', style: Theme.of(context).textTheme.bodyMedium,),
                const SizedBox(height: 25.0),

                TextField(
                  style: Theme.of(context).textTheme.bodyMedium,
                  keyboardType: TextInputType.emailAddress,
                  controller: emailController,
                  decoration: const InputDecoration(
                    labelText: 'Email',
                    prefixIcon: Icon(Icons.email),
                  ),
                ),
                const SizedBox(height: 16.0),
                TextField(
                  style: Theme.of(context).textTheme.bodyMedium,
                  controller: passwordController,
                  decoration: InputDecoration(
                    labelText: '–ü–∞—Ä–æ–ª—å',
                    suffixIcon: IconButton(
                      icon: Icon(
                        _isObscured ? Icons.visibility : Icons.visibility_off,
                      ),
                      onPressed: _togglePasswordVisibility,
                    ),
                    prefixIcon: const Icon(Icons.key),
                  ),
                  obscureText: _isObscured,
                ),
                const SizedBox(height: 40.0),

                Row(
                  children: [

                    Checkbox(
                      value: privacyPolicyChecked,
                      onChanged: (value) {
                        togglePrivacyPolicyChecked();
                      },
                    ),
                    SizedBox(
                      width: MediaQuery.of(context).size.width*0.75,
                      child: const TextWithLink(
                        linkedText: '–ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏',
                        uri: '/privacy_policy',
                        text: '–ì–∞–ª–æ—á–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –≤ –∫—É—Ä—Å–µ –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏',
                      ),
                    )

                  ],
                ),

                const SizedBox(height: 40.0),

                CustomButton(
                    buttonText: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
                    onTapMethod: () async {

                      setState(() {
                        loading = true;
                      });

                      if (!privacyPolicyChecked){

                        showSnackBar('–≠—Ç–æ –≤–∞–∂–Ω–æ! –ü–æ—Å—Ç–∞–≤—å –≥–∞–ª–æ—á–∫—É, —á—Ç–æ —Å–æ–≥–ª–∞—Å–µ–Ω —Ç—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ü§®üìú', AppColors.attentionRed, 2);

                      } else {

                        String email = emailController.text;
                        String password = passwordController.text;
                        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        String? uid = await authWithEmail.createUserWithEmailAndPassword(email, password);

                        if (uid != null) {

                          if (uid == 'weak-password'){

                            updateShowLogInButton(false);

                            showSnackBar(
                                "–¢–≤–æ–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å - –∫–∞–∫ —Å—Ç–µ–∫–ª—è–Ω–Ω–æ–µ –æ–∫–Ω–æ. –î–∞–≤–∞–π –∑–∞–º–µ–Ω–∏–º –µ–≥–æ –Ω–∞ —Å—Ç–∞–ª—å–Ω—ã–µ –¥–≤–µ—Ä–∏ —Å –∫–æ–¥–æ–≤—ã–º –∑–∞–º–∫–æ–º!",
                                AppColors.attentionRed,
                                2
                            );

                          } else if (uid == 'email-already-in-use'){

                            updateShowLogInButton(true);

                            showSnackBar(
                                "–í–æ—Ç —ç—Ç–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ! –ï—Å–ª–∏ —ç—Ç–æ —Ç—ã, –¥—Ä—É–∂–∏—â–µ, –¥–∞–≤–∞–π –≤—Å–ø–æ–º–Ω–∏–º, –∫–∞–∫ –∑–∞—Ö–æ–¥–∏—Ç—å - —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –∂–¥–µ—Ç!",
                                AppColors.attentionRed,
                                5
                            );

                          } else if (uid == 'channel-error'){

                            updateShowLogInButton(false);

                            // TODO –°–¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ —Å–Ω–∞–∫–±–∞—Ä, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–¥–∞ –æ—à–∏–±–∫–∏

                            showSnackBar(
                                "–û–π! –ö–∞–∂–µ—Ç—Å—è, —Ç—ã –∑–∞–±—ã–ª –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç–∏ –≤–≤–µ–ª —Å–≤–æ–π email –∏ –ø—Ä–∏–¥—É–º–∞–ª –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å, –∏ —Ç–æ–≥–¥–∞ –º—ã —Å–º–æ–∂–µ–º —Ç–µ–±—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å!",
                                AppColors.attentionRed,
                                5
                            );

                          } else if (uid == 'invalid-email'){

                            updateShowLogInButton(false);

                            showSnackBar(
                                "–û–π, —á—Ç–æ-—Ç–æ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º Email –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –£–¥–æ—Å—Ç–æ–≤–µ—Ä—å—Å—è, —á—Ç–æ –≤–≤–æ–¥–∏—à—å –µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏ –¥–∞–≤–∞–π –µ—â–µ —Ä–∞–∑! üì≠üîÑ",
                                AppColors.attentionRed,
                                2
                            );

                          } else {

                            User newUser = User(
                                uid: uid,
                                role: '1113',
                                name: '',
                                lastname: '',
                                phone: '',
                                whatsapp: '',
                                telegram: '',
                                instagram: '',
                                city: '',
                                birthDate: '',
                                sex: '',
                                avatar: 'https://firebasestorage.googleapis.com/v0/b/dvij-flutter.appspot.com/o/avatars%2F4632379.jpg?alt=media&token=1a96beed-155f-489a-b676-a2326ebeae36'
                            );

                            String? publishedInDatabase = await userDatabase.writeUserData(newUser);

                            if (publishedInDatabase == 'success'){

                              setState(() {
                                loading = true;
                              });

                              showSnackBar(
                                  "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –¢–µ–ø–µ—Ä—å –≤—ã —á–∞—Å—Ç—å –∫–ª—É–±–∞ –ª—é–±–∏—Ç–µ–ª–µ–π –≤–µ—Å–µ–ª—å—è –∏ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –≤—Ä–µ–º—è–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è. "
                                      "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É - –≤–∞—Å –∂–¥–µ—Ç –≤–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é "
                                      "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –º–æ—Ä—é –≤–µ—Å–µ–ª—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π!",
                                  Colors.green,
                                  5
                              );

                              navigateToProfile();

                            } else {

                              // TODO: –°–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                            }



                          }

                        } else {
                          // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–¥–∞–ª–æ—Å—å
                          // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–ª–∏ –ø—Ä–∏–Ω—è—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ä—ã

                          showSnackBar(
                              "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –í–æ–∑–º–æ–∂–Ω–æ, –≥–¥–µ-—Ç–æ –æ—à–∏–±–∫–∞. "
                                  "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑. "
                                  "–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è, —Å–æ–æ–±—â–∏ –Ω–∞–º!",
                              AppColors.attentionRed,
                              5
                          );

                        }
                      }

                    }


                ),

                if (showLogInButton) const SizedBox(height: 50.0),

                if (showLogInButton) Text(
                    '–û–ø–∞—á–∫–∏, –∫–∞–∂–µ—Ç—Å—è, —Ç–≤–æ–π –∫–∏–±–µ—Ä-–¥–≤–æ–π–Ω–∏–∫ —É–∂–µ –≤ —Å–µ—Ç–∏! –ú–æ–∂–µ—Ç, –ø–æ—Ä–∞ –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å–≤–æ–π –ø–∞—Ä–æ–ª—å –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤–æ–π—Ç–∏?',
                    style: Theme.of(context).textTheme.bodyMedium
                ),

                if (showLogInButton) const SizedBox(height: 20.0),

                if (showLogInButton) CustomButton(
                  state: 'secondary',
                  buttonText: '–í–æ–π—Ç–∏?',
                  onTapMethod: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const LoginScreen()),
                    );
                  },

                ),
              ],
            ),
          ),

        ],


      )


    );
  }
}

