import 'package:dvij_flutter/database_firebase/user_database.dart';
import 'package:dvij_flutter/elements/buttons/custom_button.dart';
import 'package:dvij_flutter/elements/loading_screen.dart';
import 'package:dvij_flutter/elements/text_and_icons_widgets/text_with_link.dart';
import 'package:flutter/material.dart';
import 'package:dvij_flutter/authentication/auth_with_email.dart';
import '../../classes/user_class.dart';
import '../../elements/custom_snack_bar.dart';
import '../../themes/app_colors.dart';
import 'login_screen.dart';

// -- –≠–ö–†–ê–ù –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò ----

class RegistrationScreen extends StatefulWidget {
  const RegistrationScreen({super.key});

  @override
  _RegistrationScreenState createState() => _RegistrationScreenState();
}

class _RegistrationScreenState extends State<RegistrationScreen> {

  //late final AppState appState; -- –ï—Å–ª–∏ –≤—Å–µ –Ω–æ—Ä–º –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å, —É–¥–∞–ª–∏ —ç—Ç—É —Å—Ç—Ä–æ—á–∫—É // –û—Ç 30.11.2023

  // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã
  //final AuthWithEmail authWithEmail = AuthWithEmail();
  //final UserDatabase userDatabase = UserDatabase();

  // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
  final TextEditingController emailController = TextEditingController();
  final TextEditingController passwordController = TextEditingController();

  // --- –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–æ—Ñ–∏–ª—è ---

  void navigateToProfile() {
    Navigator.pushNamedAndRemoveUntil(
      context,
      '/Profile', // –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –∑–∞–¥–∞–µ—Ç–µ –≤ MaterialApp
          (route) => false,
    );
  }

  // ---- –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞

  void showSnackBar(String message, Color color, int showTime) {
    final snackBar = customSnackBar(message: message, backgroundColor: color, showTime: showTime);
    ScaffoldMessenger.of(context).showSnackBar(snackBar);
  }

  // ---- –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏

  bool loading = false;

  // --- –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ - –ú–æ–∂–µ—Ç –Ω—É–∂–Ω–æ –≤–æ–π—Ç–∏?

  bool showLogInButton = false;

  void updateShowLogInButton(bool newValue) {
    setState(() {
      showLogInButton = newValue;
    });
  }

  // ---- –ß–µ–∫-–±–æ–∫—Å –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–ª–∏ –ø—Ä–∞–≤–∏–ª–∞ –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏

  bool privacyPolicyChecked = false;

  void togglePrivacyPolicyChecked() {
    setState(() {
      privacyPolicyChecked = !privacyPolicyChecked;
    });
  }

  // ---- –í–∏–¥–∏–º–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è ------

  bool _isObscured = true;

  void _togglePasswordVisibility() {
    setState(() {
      _isObscured = !_isObscured;
    });
  }

  @override
  Widget build(BuildContext context) {

    return Scaffold(
      appBar: AppBar(
        title: const Text('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'),
      ),
      body: Stack (

        children: [

          // ---- –ï—Å–ª–∏ –∏–¥–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∞, —Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ ----

          if (loading) const LoadingScreen(loadingText: '–ü–æ–¥–æ–∂–¥–∏, –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',)

          // --- –í –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö —ç–∫—Ä–∞–Ω —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ----

          else SingleChildScrollView(
            padding: const EdgeInsets.fromLTRB(20, 50, 20, 50),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              mainAxisAlignment: MainAxisAlignment.center,

              children: [

                // --- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ ------

                Text('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', style: Theme.of(context).textTheme.titleLarge,),
                const SizedBox(height: 15.0),
                Text('–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—à—å—Å—è –∫ –Ω–∞–º! –¢–µ–ø–µ—Ä—å —Ç—ã —á–∞—Å—Ç—å –Ω–∞—à–µ–π –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ–π —Å–µ–º—å–∏. –ì–æ—Ç–æ–≤—å—Å—è –∫ —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–º –≤—Å—Ç—Ä–µ—á–∞–º –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º! üòä', style: Theme.of(context).textTheme.bodyMedium,),
                const SizedBox(height: 25.0),

                // ----- –ü–æ–ª–µ Email -----
                // TODO –°–¥–µ–ª–∞—Ç—å —Ñ—É–Ω—Ü–∏–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –ø–æ–ª–µ–π –≤–≤–æ–¥–∞

                TextField(
                  style: Theme.of(context).textTheme.bodyMedium,
                  keyboardType: TextInputType.emailAddress,
                  controller: emailController,
                  decoration: const InputDecoration(
                    labelText: 'Email',
                    prefixIcon: Icon(Icons.email),
                  ),
                ),
                const SizedBox(height: 16.0),

                // ----- –ü–æ–ª–µ –ø–∞—Ä–æ–ª—å ------

                TextField(
                  style: Theme.of(context).textTheme.bodyMedium,
                  controller: passwordController,
                  decoration: InputDecoration(
                    labelText: '–ü–∞—Ä–æ–ª—å',
                    suffixIcon: IconButton(
                      icon: Icon(
                        _isObscured ? Icons.visibility : Icons.visibility_off,
                      ),
                      onPressed: _togglePasswordVisibility,
                    ),
                    prefixIcon: const Icon(Icons.key),
                  ),
                  obscureText: _isObscured,
                ),
                const SizedBox(height: 40.0),

                // ----- –ß–ï–ö –ë–û–ö–° -------
                // TODO –°–¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —á–µ–∫-–±–æ–∫—Å–∞

                Row(
                  children: [

                    Checkbox(
                      value: privacyPolicyChecked,
                      onChanged: (value) {
                        togglePrivacyPolicyChecked();
                      },
                    ),
                    // ---- –ù–∞–¥–ø–∏—Å—å —É —á–µ–∫–±–æ–∫—Å–∞ -----
                    SizedBox(
                      width: MediaQuery.of(context).size.width*0.75,
                      child: const TextWithLink(
                        linkedText: '–ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏',
                        uri: '/privacy_policy',
                        text: '–ì–∞–ª–æ—á–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ, —á—Ç–æ –≤—ã –≤ –∫—É—Ä—Å–µ –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏',
                      ),
                    )

                  ],
                ),

                const SizedBox(height: 40.0),

                // ----- –ö–ù–û–ü–ö–ê –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–¢–¨–°–Ø -----

                CustomButton(
                    buttonText: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è',
                    onTapMethod: () async {

                      // ---- –ù–ê–ß–ê–õ–û –ü–†–û–¶–ï–°–°–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò -----

                      // ---- –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –≠–ö–†–ê–ù –ó–ê–ì–†–£–ó–ö–ò ------

                      setState(() {
                        loading = true;
                      });

                      // ---- –ï–°–õ–ò –ù–ï –ü–û–î–¢–í–ï–†–î–ò–õ–ò –ß–ï–ö-–ë–û–ö–°, –í–´–í–û–î–ò–ú –û–®–ò–ë–ö–£
                      if (!privacyPolicyChecked){

                        showSnackBar('–≠—Ç–æ –≤–∞–∂–Ω–æ! –ü–æ—Å—Ç–∞–≤—å –≥–∞–ª–æ—á–∫—É, —á—Ç–æ —Å–æ–≥–ª–∞—Å–µ–Ω —Ç—ã —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ ü§®üìú', AppColors.attentionRed, 2);

                        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
                        setState(() {
                          loading = false;
                        });

                      } else {

                        // ---- –ï–°–õ–ò –ß–ï–ö-–ë–û–ö–° –ü–û–î–¢–í–ï–†–ñ–î–ï–ù -----

                        String email = emailController.text;
                        String password = passwordController.text;

                        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –∂–¥–µ–º
                        //String? uid = await authWithEmail.createUserWithEmailAndPassword(email, password);
                        String? uid = await UserCustom.createUserWithEmailAndPassword(email, password);

                        // ----- –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏ -----

                        if (uid != null) {

                          // ---- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ ------
                          // TODO –°–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –º–µ–Ω—é. –î–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ª–∏–±–æ —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏, –ª–∏–±–æ 'Ok'

                          if (uid == 'weak-password'){

                            updateShowLogInButton(false);

                            showSnackBar(
                                "–¢–≤–æ–π —Ç–µ–∫—É—â–∏–π –ø–∞—Ä–æ–ª—å - –∫–∞–∫ —Å—Ç–µ–∫–ª—è–Ω–Ω–æ–µ –æ–∫–Ω–æ. –î–∞–≤–∞–π –∑–∞–º–µ–Ω–∏–º –µ–≥–æ –Ω–∞ —Å—Ç–∞–ª—å–Ω—ã–µ –¥–≤–µ—Ä–∏ —Å –∫–æ–¥–æ–≤—ã–º –∑–∞–º–∫–æ–º!",
                                AppColors.attentionRed,
                                2
                            );

                          } else if (uid == 'email-already-in-use'){

                            updateShowLogInButton(true);

                            showSnackBar(
                                "–í–æ—Ç —ç—Ç–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ! –ï—Å–ª–∏ —ç—Ç–æ —Ç—ã, –¥—Ä—É–∂–∏—â–µ, –¥–∞–≤–∞–π –≤—Å–ø–æ–º–Ω–∏–º, –∫–∞–∫ –∑–∞—Ö–æ–¥–∏—Ç—å - —Ç–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –∂–¥–µ—Ç!",
                                AppColors.attentionRed,
                                5
                            );

                          } else if (uid == 'channel-error'){

                            updateShowLogInButton(false);

                            // TODO –°–¥–µ–ª–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ —Å–Ω–∞–∫–±–∞—Ä, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–¥–∞ –æ—à–∏–±–∫–∏

                            showSnackBar(
                                "–û–π! –ö–∞–∂–µ—Ç—Å—è, —Ç—ã –∑–∞–±—ã–ª –≤–∞–∂–Ω—ã–µ –¥–µ—Ç–∞–ª–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–±–µ–¥–∏—Å—å, —á—Ç–æ —Ç–∏ –≤–≤–µ–ª —Å–≤–æ–π email –∏ –ø—Ä–∏–¥—É–º–∞–ª –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å, –∏ —Ç–æ–≥–¥–∞ –º—ã —Å–º–æ–∂–µ–º —Ç–µ–±—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å!",
                                AppColors.attentionRed,
                                5
                            );

                          } else if (uid == 'invalid-email'){

                            updateShowLogInButton(false);

                            showSnackBar(
                                "–û–π, —á—Ç–æ-—Ç–æ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º Email –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –£–¥–æ—Å—Ç–æ–≤–µ—Ä—å—Å—è, —á—Ç–æ –≤–≤–æ–¥–∏—à—å –µ–≥–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏ –¥–∞–≤–∞–π –µ—â–µ —Ä–∞–∑! üì≠üîÑ",
                                AppColors.attentionRed,
                                2
                            );

                          } else {

                            // ---- –ï—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ —Ä–∞–≤–µ–Ω –æ—à–∏–±–∫–∞–º, —Å–æ–∑–¥–∞–µ–º –ø–æ—á—Ç–∏ –ø—É—Å—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---

                            UserCustom newUser = UserCustom.empty(uid, email);

                            // --- –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –≤ Firebase

                            // String? publishedInDatabase = await userDatabase.writeUserData(newUser);
                            String? publishedInDatabase = await UserCustom.writeUserData(newUser);

                            // ---- –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ ----

                            if (publishedInDatabase == 'success'){

                              // ----- –£–±–∏—Ä–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ ----

                              setState(() {
                                loading = false;
                              });

                              showSnackBar(
                                  "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –¢–µ–ø–µ—Ä—å —Ç—ã —á–∞—Å—Ç—å –∫–ª—É–±–∞ –ª—é–±–∏—Ç–µ–ª–µ–π –≤–µ—Å–µ–ª—å—è –∏ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –≤—Ä–µ–º—è–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è. "
                                      "–ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ—é –ø–æ—á—Ç—É - —Ç–µ–±—è –∂–¥–µ—Ç –≤–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é "
                                      "—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ì–æ—Ç–æ–≤—å—Å—è –∫ –º–æ—Ä—é –≤–µ—Å–µ–ª—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π!",
                                  Colors.green,
                                  5
                              );

                              navigateToProfile();

                            } else {

                              // TODO: –°–¥–µ–ª–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                            }

                          }

                        } else {

                          // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª—É—á–∞—è, –∫–æ–≥–¥–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–¥–∞–ª–æ—Å—å

                          showSnackBar(
                              "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –í–æ–∑–º–æ–∂–Ω–æ, –≥–¥–µ-—Ç–æ –æ—à–∏–±–∫–∞. "
                                  "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—å –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑. "
                                  "–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è, —Å–æ–æ–±—â–∏ –Ω–∞–º!",
                              AppColors.attentionRed,
                              5
                          );
                        }
                      }
                    }
                ),

                // ---- –ï—Å–ª–∏ Email —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö -----

                if (showLogInButton) const SizedBox(height: 50.0),

                if (showLogInButton) Text(
                    '–û–ø–∞—á–∫–∏, –∫–∞–∂–µ—Ç—Å—è, —Ç–≤–æ–π –∫–∏–±–µ—Ä-–¥–≤–æ–π–Ω–∏–∫ —É–∂–µ –≤ —Å–µ—Ç–∏! –ú–æ–∂–µ—Ç, –ø–æ—Ä–∞ –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å–≤–æ–π –ø–∞—Ä–æ–ª—å –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –≤–æ–π—Ç–∏?',
                    style: Theme.of(context).textTheme.bodyMedium
                ),

                if (showLogInButton) const SizedBox(height: 20.0),

                if (showLogInButton) CustomButton(
                  state: 'secondary',
                  buttonText: '–í–æ–π—Ç–∏?',
                  onTapMethod: () {
                    Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const LoginScreen()),
                    );
                  },
                ),
              ],
            ),
          ),
        ],
      )
    );
  }
}

